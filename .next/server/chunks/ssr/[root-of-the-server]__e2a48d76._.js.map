{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/1008473/OneDrive%20-%20Loudoun%20County%20Public%20Schools/Documents/Coding/earthunfolded/src/components/Earth.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport { useFrame, useLoader } from '@react-three/fiber';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls, Environment } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\nimport { gsap } from 'gsap';\r\n\r\nexport default function Earth({ timeframe, onHotspotClick }) {\r\n  const earthRef = useRef();\r\n  const gltf = useLoader(GLTFLoader, '/models/earth.glb');\r\n  const controlsRef = useRef();\r\n\r\n  // Handle rotation animation\r\n  useFrame(() => {\r\n    if (earthRef.current) {\r\n      earthRef.current.rotation.y += 0.001;\r\n    }\r\n  });\r\n\r\n  // Effect for timeframe changes - animate Earth appearance based on selected time period\r\n  useEffect(() => {\r\n    if (earthRef.current) {\r\n      // Example of animating Earth based on timeframe\r\n      gsap.to(earthRef.current.rotation, {\r\n        duration: 2,\r\n        x: timeframe.tilt || 0,\r\n        ease: \"power2.inOut\"\r\n      });\r\n\r\n      // If we had materials we could control (like different textures for different time periods)\r\n      if (earthRef.current.material) {\r\n        gsap.to(earthRef.current.material, {\r\n          duration: 1.5,\r\n          opacity: 1,\r\n          ease: \"power2.inOut\"\r\n        });\r\n      }\r\n    }\r\n  }, [timeframe]);\r\n\r\n  return (\r\n    <>\r\n      <OrbitControls\r\n        ref={controlsRef}\r\n        enableZoom={true}\r\n        enablePan={false}\r\n        minDistance={2.5}\r\n        maxDistance={8}\r\n        rotateSpeed={0.5}\r\n      />\r\n\r\n      <primitive\r\n        ref={earthRef}\r\n        object={gltf.scene}\r\n        scale={1}\r\n        position={[0, 0, 0]}\r\n        onClick={onHotspotClick}\r\n      />\r\n\r\n      <Environment preset=\"city\" />\r\n\r\n      {/* Add atmospheric effect */}\r\n      <mesh scale={1.02}>\r\n        <sphereGeometry args={[1, 32, 32]} />\r\n        <meshPhongMaterial\r\n          color=\"#3482F6\"\r\n          opacity={0.15}\r\n          transparent={true}\r\n          side={THREE.BackSide}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE;IACzD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD;IACtB,MAAM,OAAO,CAAA,GAAA,gNAAA,CAAA,YAAS,AAAD,EAAE,iKAAA,CAAA,aAAU,EAAE;IACnC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD;IAEzB,4BAA4B;IAC5B,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;QACP,IAAI,SAAS,OAAO,EAAE;YACpB,SAAS,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI;QACjC;IACF;IAEA,wFAAwF;IACxF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,OAAO,EAAE;YACpB,gDAAgD;YAChD,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAS,OAAO,CAAC,QAAQ,EAAE;gBACjC,UAAU;gBACV,GAAG,UAAU,IAAI,IAAI;gBACrB,MAAM;YACR;YAEA,4FAA4F;YAC5F,IAAI,SAAS,OAAO,CAAC,QAAQ,EAAE;gBAC7B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAS,OAAO,CAAC,QAAQ,EAAE;oBACjC,UAAU;oBACV,SAAS;oBACT,MAAM;gBACR;YACF;QACF;IACF,GAAG;QAAC;KAAU;IAEd,qBACE;;0BACE,8OAAC,iKAAA,CAAA,gBAAa;gBACZ,KAAK;gBACL,YAAY;gBACZ,WAAW;gBACX,aAAa;gBACb,aAAa;gBACb,aAAa;;;;;;0BAGf,8OAAC;gBACC,KAAK;gBACL,QAAQ,KAAK,KAAK;gBAClB,OAAO;gBACP,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;gBACnB,SAAS;;;;;;0BAGX,8OAAC,+JAAA,CAAA,cAAW;gBAAC,QAAO;;;;;;0BAGpB,8OAAC;gBAAK,OAAO;;kCACX,8OAAC;wBAAe,MAAM;4BAAC;4BAAG;4BAAI;yBAAG;;;;;;kCACjC,8OAAC;wBACC,OAAM;wBACN,SAAS;wBACT,aAAa;wBACb,MAAM,+IAAA,CAAA,WAAc;;;;;;;;;;;;;;AAK9B","debugId":null}}]
}